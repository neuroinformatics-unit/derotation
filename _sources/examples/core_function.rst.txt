
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/core_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_core_function.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_core_function.py:


Derotate a TIFF movie line-by-line using precomputed rotation angles
=====================================================================

This script demonstrates how to load a 3D TIFF image stack (frames × height ×
width) and apply line-by-line derotation using a set of precomputed rotation
angles.

Each horizontal line in the image is rotated by a specific angle (in degrees),
allowing correction for sample motion or intentional rotation during
acquisition.

Inputs:

- angles_per_line.npy: A 1D NumPy array of angles in degrees, with one value
  per image line
- rotation_sample.tif: A TIFF stack to be derotated.

The script computes the derotated movie and displays the mean image of the
derotated stack.

.. GENERATED FROM PYTHON SOURCE LINES 24-32

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np
    import tifffile

    from derotation.derotate_by_line import derotate_an_image_array_line_by_line
    from derotation.sample_data import fetch_data








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Load per-line rotation angles

.. GENERATED FROM PYTHON SOURCE LINES 34-39

.. code-block:: Python


    angles_path = fetch_data("angles_per_line.npy")
    print(f"Loading per-line rotation angles from {angles_path}")
    angles_per_line = np.load(angles_path)  # Shape: (height,)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading per-line rotation angles from /home/runner/.derotation/data/angles_per_line.npy




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Load the TIFF stack (shape: num_frames × height × width)

.. GENERATED FROM PYTHON SOURCE LINES 41-49

.. code-block:: Python


    tif_path = fetch_data("rotation_sample.tif")
    print(f"Loading image stack from {tif_path}")
    image_stack = tifffile.imread(tif_path)

    print(f"Image stack shape: {image_stack.shape}")
    print(f"Angles per line shape: {angles_per_line.shape}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading image stack from /home/runner/.derotation/data/rotation_sample.tif
    Image stack shape: (270, 256, 256)
    Angles per line shape: (75471,)




.. GENERATED FROM PYTHON SOURCE LINES 50-51

See the angles

.. GENERATED FROM PYTHON SOURCE LINES 51-62

.. code-block:: Python

    fig, ax = plt.subplots(figsize=(10, 5))
    ax.scatter(np.arange(angles_per_line.shape[0]), angles_per_line, s=1)
    ax.set_title("Rotation angles per line")
    ax.set_xlabel("Line number")
    ax.set_ylabel("Angle (degrees)")
    ax.spines["top"].set_visible(False)
    ax.spines["right"].set_visible(False)
    plt.tight_layout()
    plt.show()





.. image-sg:: /examples/images/sphx_glr_core_function_001.png
   :alt: Rotation angles per line
   :srcset: /examples/images/sphx_glr_core_function_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-66

Set derotation parameters
see :meth:`derotation.analysis.full_derotation_pipeline.FullPipeline
.find_image_offset` for more details on finding the offset value

.. GENERATED FROM PYTHON SOURCE LINES 66-71

.. code-block:: Python

    rotation_center = (129, 128)  # (y, x) format
    blank_pixels_value = -3623  # Value for pixels outside the rotated area

    print(f"Applying derotation with center: {rotation_center}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Applying derotation with center: (129, 128)




.. GENERATED FROM PYTHON SOURCE LINES 72-73

plot first frame with rotation center

.. GENERATED FROM PYTHON SOURCE LINES 73-81

.. code-block:: Python

    fig, ax = plt.subplots(figsize=(10, 5))
    ax.imshow(image_stack[0], cmap="gray")
    ax.scatter(rotation_center[1], rotation_center[0], color="red", s=20)
    ax.set_title("Rotation center")
    ax.axis("off")
    plt.tight_layout()
    plt.show()




.. image-sg:: /examples/images/sphx_glr_core_function_002.png
   :alt: Rotation center
   :srcset: /examples/images/sphx_glr_core_function_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 82-83

Perform line-by-line derotation

.. GENERATED FROM PYTHON SOURCE LINES 83-91

.. code-block:: Python


    derotated_stack = derotate_an_image_array_line_by_line(
        image_stack=image_stack,
        rot_deg_line=angles_per_line,
        center=rotation_center,
        blank_pixels_value=blank_pixels_value,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/69120 [00:00<?, ?it/s]     48%|████▊     | 33051/69120 [00:00<00:00, 330421.30it/s]     96%|█████████▌| 66094/69120 [00:00<00:00, 108793.91it/s]    100%|██████████| 69120/69120 [00:00<00:00, 124383.27it/s]




.. GENERATED FROM PYTHON SOURCE LINES 92-93

Visualize the result by taking the mean

.. GENERATED FROM PYTHON SOURCE LINES 93-102

.. code-block:: Python


    mean_image = np.mean(derotated_stack, axis=0)

    fig, ax = plt.subplots(figsize=(10, 5))
    ax.imshow(mean_image, cmap="viridis")
    ax.set_title("Mean image of the derotated stack")
    ax.axis("off")
    plt.tight_layout()
    plt.show()



.. image-sg:: /examples/images/sphx_glr_core_function_003.png
   :alt: Mean image of the derotated stack
   :srcset: /examples/images/sphx_glr_core_function_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.957 seconds)


.. _sphx_glr_download_examples_core_function.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/derotation/gh-pages?filepath=notebooks/examples/core_function.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: core_function.ipynb <core_function.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: core_function.py <core_function.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: core_function.zip <core_function.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
