
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/find_center_of_rotation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_find_center_of_rotation.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_find_center_of_rotation.py:


Full pipeline integration: simulate and find center of rotation
================================================================

This tutorial demonstrates the integration of the full derotation pipeline,
including simulation of a tilted rotation plane and the incremental search
for the center of rotation.

We will:
- Generate synthetic line-scanning image stacks.
- Simulate out-of-plane and oriented rotations.
- Run the complete `integration_pipeline()` to test derotation accuracy.
- Automatically display the plots generated by the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 18-20

Imports
-------

.. GENERATED FROM PYTHON SOURCE LINES 20-27

.. code-block:: Python

    from pathlib import Path
    import matplotlib.pyplot as plt
    from IPython.display import Image, display
    import os

    from derotation.simulate.synthetic_data import SyntheticData








.. GENERATED FROM PYTHON SOURCE LINES 28-30

Define parameters for the synthetic simulation
----------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 30-35

.. code-block:: Python


    rotation_plane_angle = 25  # degrees
    rotation_plane_orientation = 45  # degrees
    center_of_rotation_offset = (20, -10)  # pixels








.. GENERATED FROM PYTHON SOURCE LINES 36-41

Run full pipeline
-----------------
This will generate simulated rotated data and run an incremental search
to find the optimal center of rotation.
All intermediate plots are saved in the "debug" folder.

.. GENERATED FROM PYTHON SOURCE LINES 41-55

.. code-block:: Python


    s_data = SyntheticData(
        radius=5,
        center_of_rotation_offset=center_of_rotation_offset,
        rotation_plane_angle=rotation_plane_angle,
        rotation_plane_orientation=rotation_plane_orientation,
        num_frames=50,
        pad=20,
        background_value=80,
        plots=True,
    )

    s_data.integration_pipeline()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


      0%|          | 0/50 [00:00<?, ?it/s]
      4%|▍         | 2/50 [00:00<00:04,  9.71it/s]
      6%|▌         | 3/50 [00:00<00:08,  5.26it/s]
      8%|▊         | 4/50 [00:00<00:10,  4.46it/s]
     10%|█         | 5/50 [00:01<00:10,  4.21it/s]
     12%|█▏        | 6/50 [00:01<00:10,  4.11it/s]
     14%|█▍        | 7/50 [00:01<00:12,  3.34it/s]
     16%|█▌        | 8/50 [00:01<00:11,  3.50it/s]
     18%|█▊        | 9/50 [00:02<00:11,  3.61it/s]
     20%|██        | 10/50 [00:02<00:10,  3.72it/s]
     22%|██▏       | 11/50 [00:02<00:10,  3.80it/s]
     24%|██▍       | 12/50 [00:03<00:09,  3.85it/s]
     26%|██▌       | 13/50 [00:03<00:09,  3.89it/s]
     28%|██▊       | 14/50 [00:03<00:09,  3.93it/s]
     30%|███       | 15/50 [00:03<00:08,  3.95it/s]
     32%|███▏      | 16/50 [00:03<00:08,  3.97it/s]
     34%|███▍      | 17/50 [00:04<00:08,  3.99it/s]
     36%|███▌      | 18/50 [00:04<00:07,  4.01it/s]
     38%|███▊      | 19/50 [00:04<00:07,  4.02it/s]
     40%|████      | 20/50 [00:04<00:07,  4.03it/s]
     42%|████▏     | 21/50 [00:05<00:07,  4.04it/s]
     44%|████▍     | 22/50 [00:05<00:06,  4.04it/s]
     46%|████▌     | 23/50 [00:05<00:06,  4.06it/s]
     48%|████▊     | 24/50 [00:05<00:06,  4.07it/s]
     50%|█████     | 25/50 [00:06<00:06,  4.07it/s]
     52%|█████▏    | 26/50 [00:06<00:05,  4.06it/s]
     54%|█████▍    | 27/50 [00:06<00:05,  4.06it/s]
     56%|█████▌    | 28/50 [00:06<00:05,  4.05it/s]
     58%|█████▊    | 29/50 [00:07<00:05,  4.01it/s]
     60%|██████    | 30/50 [00:07<00:04,  4.03it/s]
     62%|██████▏   | 31/50 [00:07<00:04,  4.05it/s]
     64%|██████▍   | 32/50 [00:07<00:04,  4.05it/s]
     66%|██████▌   | 33/50 [00:08<00:04,  4.05it/s]
     68%|██████▊   | 34/50 [00:08<00:03,  4.05it/s]
     70%|███████   | 35/50 [00:08<00:03,  4.06it/s]
     72%|███████▏  | 36/50 [00:08<00:03,  4.06it/s]
     74%|███████▍  | 37/50 [00:09<00:03,  4.06it/s]
     76%|███████▌  | 38/50 [00:09<00:02,  4.06it/s]
     78%|███████▊  | 39/50 [00:09<00:02,  4.03it/s]
     80%|████████  | 40/50 [00:09<00:02,  4.02it/s]
     82%|████████▏ | 41/50 [00:10<00:02,  4.02it/s]
     84%|████████▍ | 42/50 [00:10<00:01,  4.02it/s]
     86%|████████▌ | 43/50 [00:10<00:01,  4.01it/s]
     88%|████████▊ | 44/50 [00:10<00:01,  4.01it/s]
     90%|█████████ | 45/50 [00:11<00:01,  4.01it/s]
     92%|█████████▏| 46/50 [00:11<00:00,  4.00it/s]
     94%|█████████▍| 47/50 [00:11<00:00,  4.00it/s]
     96%|█████████▌| 48/50 [00:11<00:00,  3.99it/s]
     98%|█████████▊| 49/50 [00:12<00:00,  3.98it/s]
    100%|██████████| 50/50 [00:12<00:00,  3.98it/s]
    100%|██████████| 50/50 [00:12<00:00,  4.02it/s]

      0%|          | 0/50 [00:00<?, ?it/s]
      2%|▏         | 1/50 [00:00<00:12,  3.78it/s]
      4%|▍         | 2/50 [00:00<00:12,  3.91it/s]
      6%|▌         | 3/50 [00:00<00:11,  3.97it/s]
      8%|▊         | 4/50 [00:01<00:11,  4.01it/s]
     10%|█         | 5/50 [00:01<00:11,  4.04it/s]
     12%|█▏        | 6/50 [00:01<00:10,  4.05it/s]
     14%|█▍        | 7/50 [00:01<00:10,  4.06it/s]
     16%|█▌        | 8/50 [00:01<00:10,  4.05it/s]
     18%|█▊        | 9/50 [00:02<00:10,  4.03it/s]
     20%|██        | 10/50 [00:02<00:09,  4.02it/s]
     22%|██▏       | 11/50 [00:02<00:09,  4.00it/s]
     24%|██▍       | 12/50 [00:02<00:09,  3.98it/s]
     26%|██▌       | 13/50 [00:03<00:09,  3.97it/s]
     28%|██▊       | 14/50 [00:03<00:09,  3.97it/s]
     30%|███       | 15/50 [00:03<00:08,  3.97it/s]
     32%|███▏      | 16/50 [00:04<00:08,  3.97it/s]
     34%|███▍      | 17/50 [00:04<00:08,  3.98it/s]
     36%|███▌      | 18/50 [00:04<00:08,  3.99it/s]
     38%|███▊      | 19/50 [00:04<00:07,  4.01it/s]
     40%|████      | 20/50 [00:04<00:07,  4.03it/s]
     42%|████▏     | 21/50 [00:05<00:07,  4.05it/s]
     44%|████▍     | 22/50 [00:05<00:06,  4.06it/s]
     46%|████▌     | 23/50 [00:05<00:06,  4.05it/s]
     48%|████▊     | 24/50 [00:05<00:06,  4.04it/s]
     50%|█████     | 25/50 [00:06<00:06,  4.02it/s]
     52%|█████▏    | 26/50 [00:06<00:06,  3.81it/s]
     54%|█████▍    | 27/50 [00:06<00:05,  3.87it/s]
     56%|█████▌    | 28/50 [00:07<00:05,  3.91it/s]
     58%|█████▊    | 29/50 [00:07<00:05,  3.96it/s]
     60%|██████    | 30/50 [00:07<00:05,  3.99it/s]
     62%|██████▏   | 31/50 [00:07<00:04,  3.97it/s]
     64%|██████▍   | 32/50 [00:08<00:04,  3.99it/s]
     66%|██████▌   | 33/50 [00:08<00:04,  3.99it/s]
     68%|██████▊   | 34/50 [00:08<00:04,  3.98it/s]
     70%|███████   | 35/50 [00:08<00:03,  3.98it/s]
     72%|███████▏  | 36/50 [00:09<00:03,  3.97it/s]
     74%|███████▍  | 37/50 [00:09<00:03,  3.97it/s]
     76%|███████▌  | 38/50 [00:09<00:03,  3.96it/s]
     78%|███████▊  | 39/50 [00:09<00:02,  3.95it/s]
     80%|████████  | 40/50 [00:10<00:02,  3.95it/s]
     82%|████████▏ | 41/50 [00:10<00:02,  3.94it/s]
     84%|████████▍ | 42/50 [00:10<00:02,  3.95it/s]
     86%|████████▌ | 43/50 [00:10<00:01,  3.97it/s]
     88%|████████▊ | 44/50 [00:11<00:01,  3.99it/s]
     90%|█████████ | 45/50 [00:11<00:01,  4.00it/s]
     92%|█████████▏| 46/50 [00:11<00:00,  4.01it/s]
     94%|█████████▍| 47/50 [00:11<00:00,  4.03it/s]
     96%|█████████▌| 48/50 [00:12<00:00,  4.03it/s]
     98%|█████████▊| 49/50 [00:12<00:00,  4.02it/s]
    100%|██████████| 50/50 [00:12<00:00,  4.00it/s]
    100%|██████████| 50/50 [00:12<00:00,  3.99it/s]

      0%|          | 0/35 [00:00<?, ?it/s]
     14%|█▍        | 5/35 [00:00<00:00, 46.66it/s]
     31%|███▏      | 11/35 [00:00<00:00, 50.47it/s]
     49%|████▊     | 17/35 [00:00<00:00, 51.31it/s]
     66%|██████▌   | 23/35 [00:00<00:00, 51.71it/s]
     83%|████████▎ | 29/35 [00:00<00:00, 52.23it/s]
    100%|██████████| 35/35 [00:00<00:00, 52.64it/s]
    100%|██████████| 35/35 [00:00<00:00, 51.84it/s]

    0it [00:00, ?it/s]
    12it [00:00, 341.41it/s]
    WARNING:root:The ellipse is too eccentric: 20.58; likely due to a bad fit.

      0%|          | 0/7000 [00:00<?, ?it/s]
     35%|███▍      | 2448/7000 [00:00<00:00, 24479.26it/s]
     70%|██████▉   | 4896/7000 [00:00<00:00, 21911.45it/s]
    100%|██████████| 7000/7000 [00:00<00:00, 20135.70it/s]




.. GENERATED FROM PYTHON SOURCE LINES 56-59

Display all debug plots
-----------------------
Let's display all `.png` files in the `debug/` folder, sorted by filename.

.. GENERATED FROM PYTHON SOURCE LINES 59-67

.. code-block:: Python


    debug_folder = Path("debug")
    debug_images = sorted(debug_folder.glob("*.png"))

    print(f"Found {len(debug_images)} plots in debug/")

    for img_path in debug_images:
        print(f"\n{img_path.name}")
        display(Image(filename=str(img_path)))



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Found 7 plots in debug/

    blobs.png
    <IPython.core.display.Image object>

    derotated_sinusoidal(20, -10)_48.3_88.9.png
    <IPython.core.display.Image object>

    ellipse_fit.png
    <IPython.core.display.Image object>

    image_(20, -10)_48.3_88.9.png
    <IPython.core.display.Image object>

    mean_projection_(20, -10)_48.3_88.9.png
    <IPython.core.display.Image object>

    rotated_stacks(20, -10)_48.3_88.9.png
    <IPython.core.display.Image object>

    rotation_angles(20, -10)_48.3_88.9.png
    <IPython.core.display.Image object>





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 38.821 seconds)


.. _sphx_glr_download_examples_find_center_of_rotation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/derotation/gh-pages?filepath=notebooks/examples/find_center_of_rotation.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: find_center_of_rotation.ipynb <find_center_of_rotation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: find_center_of_rotation.py <find_center_of_rotation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: find_center_of_rotation.zip <find_center_of_rotation.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
